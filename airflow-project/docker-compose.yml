services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
      TZ: Asia:Seoul
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - airflow-network
  
  webserver:
    build: 
      context: .
      dockerfile: Dockerfile-airflow
    image: airflow
    user: "airflow:0"
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW_UID: ${AIRFLOW_UID}
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: "m8C8oCOLlhUHBYtLRGemJz0TBcxqGWduwEZkvxdS"
      TZ: Asia:Seoul
    ports:
      - "8081:8080"
    volumes:
        - ./airflow/airflow.cfg:/opt/airflow/airflow.cfg
        - /etc/localtime:/etc/localtime:ro
        - /Users/data-project/data-pipeline-project/airflow-project/airflow/modules:/opt/airflow/modules
        - /Users/data-project/data-pipeline-project/airflow-project/spark:/opt/spark
        - /Users/data-project/data-pipeline-project/airflow-project/shared:/shared
        - /Users/data-project/data-pipeline-project:/opt/airflow/data-pipeline-project
        - /Users/data-project/data-pipeline-project/airflow-project/shared/data/brands_test.json:/opt/airflow/data/brands_test.json
        - ./output:/opt/airflow/output
    networks:
      - airflow-network
    command: ["airflow", "webserver"]
    
  scheduler:
    build: 
      context: .
      dockerfile: Dockerfile-airflow
    image: airflow
    user: "${AIRFLOW_UID}:0"
    restart: always
    depends_on:
      - postgres
      - webserver
    environment:
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW_UID: ${AIRFLOW_UID}
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: "m8C8oCOLlhUHBYtLRGemJz0TBcxqGWduwEZkvxdS"
      PATH: $PATH:/home/airflow/.local/bin
      TZ: Asia:Seoul
    volumes:
        - /Users/data-project/data-pipeline-project/airflow-project/shared:/shared
        - /Users/data-project/data-pipeline-project/airflow-project/shared/data/brands_test.json:/opt/airflow/data/brands_test.json
        - ./airflow/airflow.cfg:/opt/airflow/airflow.cfg
        - /etc/localtime:/etc/localtime:ro
        - /Users/data-project/data-pipeline-project:/opt/airflow/data-pipeline-project
        - /Users/data-project/data-pipeline-project/airflow-project/airflow/modules:/opt/airflow/modules
        - /Users/data-project/data-pipeline-project/airflow-project/airflow/dags:/opt/airflow/dags
        - ./output:/opt/airflow/output
    networks:
      - airflow-network
    command: scheduler

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=elasticpassword
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g -XX:-UseContainerSupport -Dlog4j2.formatMsgNoLookups=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - airflow-network
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      # - ELASTICSEARCH_USERNAME=kibana_system
      # - ELASTICSEARCH_PASSWORD=f=p0VGGYbgB_10GjQhMv
      - xpack.security.enabled=false
      - xpack.fleet.enabled=true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - airflow-network

volumes:
  postgres-db-volume:
  elasticsearch-data:

networks:
  airflow-network:
    driver: bridge